// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  Profile      Profile?
  UserSchedule UserSchedule[]
  UserProfile  UserProfile[]
  @@map("users")
}

model Profile {
  id          Int      @id @default(autoincrement())
  nickname    String
  seniority   String
  description String
  photo       String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  Address             Address?
  userId              Int                   @unique
  user                User?                 @relation(fields: [userId], references: [id])
  roleId              Int?
  Role                Role?                 @relation(fields: [roleId], references: [id])
  ProfileSkill        ProfileSkill[]
  ProfileAvailability ProfileAvailability[]
  UserProfile         UserProfile[]
  @@map("profiles")
}

model Address {
  id Int @id @default(autoincrement())
  street String
  number Int
  cep String
  country String
  state String
  city String

  profileId              Int                   @unique
  Profile                Profile?              @relation(fields: [profileId], references: [id])
  @@map("address")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  profile Profile[]
  @@map("roles")
}

model Skill {
  id   Int    @id @default(autoincrement())
  name String @unique

  Profile ProfileSkill[]
  @@map("skills")
}

model Availability {
  id   Int      @id @default(autoincrement())
  day  DateTime
  start_time DateTime
  end_time DateTime

  ProfileAvailability ProfileAvailability[]
  scheduleId          Int?
  Schedule            Schedule?             @relation(fields: [scheduleId], references: [id])
  @@map("availabilities")
}

model Schedule {
  id          Int      @id @default(autoincrement())
  day         DateTime
  start_time  DateTime
  end_time    DateTime
  description String
  created_at  DateTime @default(now())

  availabity   Availability[]
  UserSchedule UserSchedule[]
  @@map("schedules")
}

model UserSchedule {
  id         Int      @id @default(autoincrement())

  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  scheduleId Int
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  @@map("users_schedules")
}

model ProfileSkill {
  id        Int     @id @default(autoincrement())

  profileId Int
  profile   Profile @relation(fields: [profileId], references: [id])
  skillId   Int
  skill     Skill   @relation(fields: [skillId], references: [id])

  @@map("profiles_skills")
}

model ProfileAvailability {
  id             Int          @id @default(autoincrement())

  profileId      Int
  profile        Profile      @relation(fields: [profileId], references: [id])
  availabilityId Int
  availability   Availability @relation(fields: [availabilityId], references: [id])

  @@map("profiles_availabilities")
}

model UserProfile {
  id Int          @id @default(autoincrement())

  userId Int
  user User       @relation(fields: [userId], references: [id])
  profileId Int
  profile Profile @relation(fields: [profileId], references: [id])

  @@map("user_profile")
}
