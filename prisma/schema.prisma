generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  Profile      Profile?
  UserSchedule UserSchedule[]
  @@map("users")
}

model Profile {
  id          Int      @id @default(autoincrement())
  nickname    String
  seniority   String
  description String
  photo       String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  userId       Int            @unique
  user         User           @relation(fields: [userId], references: [id])
  ProfileSkill ProfileSkill[]
  @@map("profiles")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  @@map("roles")
}

model Skill {
  id   Int    @id @default(autoincrement())
  name String

  ProfileSkill ProfileSkill[]
  @@map("skills")
}

model Availability {
  id   Int      @id @default(autoincrement())
  day  DateTime
  hour DateTime

  @@map("availabilities")
}

model Schedule {
  id          Int      @id @default(autoincrement())
  day         DateTime
  start_time  DateTime
  end_time    DateTime
  description String
  created_at  DateTime @default(now())

  UserSchedule UserSchedule[]
  @@map("schedules")
}

model UserSchedule {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  scheduleId Int
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  @@map("users_schedules")
}

model ProfileSkill {
  id        Int     @id @default(autoincrement())
  profileId Int
  profile   Profile @relation(fields: [profileId], references: [id])
  skillId   Int
  skill     Skill   @relation(fields: [skillId], references: [id])

  @@map("profiles_skills")
}
